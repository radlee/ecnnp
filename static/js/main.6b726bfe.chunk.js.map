{"version":3,"sources":["media/slide-pictures/gallery1.jpg","media/slide-pictures/gallery2.jpg","media/slide-pictures/gallery3.jpg","components/footer/footer.js","components/slider/slider.component.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","Row","Col","sm","class","Component","items","src","g1","altText","caption","g2","g3","Slider","props","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","CarouselItem","onExiting","onExited","key","alt","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","withRouter","Navbar","dark","extended","NavbarBrand","href","App","Jumbotron","Button","color","target","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,0NCItBC,E,uKAKb,OAEI,yBAAKC,UAAU,aACX,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KAEJ,6BAEA,yBAAKJ,UAAU,kBACX,yBAAKK,MAAM,UACP,wBAAIL,UAAU,eAAd,WAIR,8BAGJ,kBAACG,EAAA,EAAD,CAAKC,GAAG,a,GAzBIE,a,mGCS9BC,EAAQ,CACV,CACIC,IAAI,GAAD,OAAKC,KACRC,QAAS,GACTC,QAAS,IAEb,CACIH,IAAI,GAAD,OAAKI,KACRF,QAAS,GACTC,QAAS,IAEb,CACIH,IAAI,GAAD,OAAKK,KACRH,QAAS,GACTC,QAAS,KAoDFG,EAhDA,SAACC,GAAW,IAAD,EACgBC,mBAAS,GADzB,mBACfC,EADe,KACFC,EADE,OAEYF,oBAAS,GAFrB,mBAEfG,EAFe,KAEJC,EAFI,KAIhBC,EAAO,WACT,IAAIF,EAAJ,CACA,IAAMG,EAAYL,IAAgBV,EAAMgB,OAAS,EAAI,EAAIN,EAAc,EACvEC,EAAeI,KAGbE,EAAW,WACb,IAAIL,EAAJ,CACA,IAAMG,EAA4B,IAAhBL,EAAoBV,EAAMgB,OAAS,EAAIN,EAAc,EACvEC,EAAeI,KAQbG,EAASlB,EAAMmB,KAAI,SAACC,GACtB,OACI,kBAACC,EAAA,EAAD,CACIC,UAAW,kBAAMT,GAAa,IAC9BU,SAAU,kBAAMV,GAAa,IAC7BW,IAAKJ,EAAKnB,KAEV,yBAAKR,UAAU,eAAeQ,IAAKmB,EAAKnB,IAAKwB,IAAKL,EAAKjB,UACvD,kBAACuB,EAAA,EAAD,CAAiBC,YAAaP,EAAKhB,QAASwB,cAAeR,EAAKhB,cAK5E,OACI,kBAACyB,EAAA,EAAD,CACInB,YAAaA,EACbI,KAAMA,EACNG,SAAUA,GAEV,kBAACa,EAAA,EAAD,CAAoB9B,MAAOA,EAAOU,YAAaA,EAAaqB,eAxBlD,SAACC,GACXpB,GACJD,EAAeqB,MAuBVd,EACD,kBAACe,EAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,WAAWJ,eAAgBd,IAC3E,kBAACgB,EAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,OAAOJ,eAAgBjB,M,+BCrDpEsB,eAdI,SAAC5B,GAEhB,OACI,yBAAKf,UAAU,IAEX,kBAAC4C,EAAA,EAAD,CAAQ5C,UAAU,aAAa6C,MAAI,EAACC,SAAS,MACzC,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,0C,gBCgBDC,E,uKApBX,OACE,yBAAKjD,UAAU,OACb,kBAAC,EAAD,MACA,kBAACkD,EAAA,EAAD,CAAWlD,UAAU,aACnB,kBAAC,EAAD,MACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,QACX,kBAACmD,EAAA,EAAD,CAAQC,MAAM,UAAUJ,KAAK,iCAAiCK,OAAO,UAArE,oBAEF,uBAAGrD,UAAU,QACX,kBAACmD,EAAA,EAAD,CAAQC,MAAM,WAAd,qBAGJ,6BACA,kBAAC,EAAD,W,GAhBU9C,aCKZgD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,kBCxFjEC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDUnB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,SAAwB7B,OAAOC,SAAST,MACpDsC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMwB,SAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC0B,MAAM3B,EAAO,CACX4B,QAAS,CAAE,iBAAkB,YAE5BvB,MAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,MAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,MAAK,WAC7BV,OAAOC,SAASwC,eAKpBrC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAuB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OChC/BE,K","file":"static/js/main.6b726bfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gallery1.af16a1a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery2.f3253ad3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery3.e7081544.jpg\";","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nexport default class Footer extends Component {\n\n    render() {\n\n\n        return (\n\n            <div className=\"container\">\n                <Container>\n\n                    <Row>\n                        <Col sm=\"4\"></Col>\n                        <Col sm=\"4\">\n\n                            <hr />\n\n                            <div className=\"twelve columns\">\n                                <div class=\"widget\">\n                                    <h5 className=\"footer-text\">EC&NP</h5>\n                                </div>\n                            </div>\n\n                            <hr />\n\n                        </Col>\n                        <Col sm=\"4\"></Col>\n                    </Row>\n\n                </Container>\n            </div>\n\n        );\n    }\n};","import React, { useState } from 'react';\nimport {\n    Carousel,\n    CarouselItem,\n    CarouselControl,\n    CarouselIndicators,\n    CarouselCaption\n} from 'reactstrap';\nimport g1 from '../../media/slide-pictures/gallery1.jpg';\nimport g2 from '../../media/slide-pictures/gallery2.jpg';\nimport g3 from '../../media/slide-pictures/gallery3.jpg';\n\n\nconst items = [\n    {\n        src: `${g1}`,\n        altText: '',\n        caption: ''\n    },\n    {\n        src: `${g2}`,\n        altText: '',\n        caption: ''\n    },\n    {\n        src: `${g3}`,\n        altText: '',\n        caption: ''\n    }\n];\n\nconst Slider = (props) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [animating, setAnimating] = useState(false);\n\n    const next = () => {\n        if (animating) return;\n        const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n        setActiveIndex(nextIndex);\n    }\n\n    const previous = () => {\n        if (animating) return;\n        const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n        setActiveIndex(nextIndex);\n    }\n\n    const goToIndex = (newIndex) => {\n        if (animating) return;\n        setActiveIndex(newIndex);\n    }\n\n    const slides = items.map((item) => {\n        return (\n            <CarouselItem\n                onExiting={() => setAnimating(true)}\n                onExited={() => setAnimating(false)}\n                key={item.src}\n            >\n                <img className=\"image-sizing\" src={item.src} alt={item.altText} />\n                <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\n            </CarouselItem>\n        );\n    });\n\n    return (\n        <Carousel\n            activeIndex={activeIndex}\n            next={next}\n            previous={previous}\n        >\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n            {slides}\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n        </Carousel>\n    );\n}\n\nexport default Slider;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n    Navbar,\n    NavbarBrand\n} from 'reactstrap';\n\nconst Navigation = (props) => {\n\n    return (\n        <div className=\"\">\n\n            <Navbar className=\"navigation\" dark extended=\"md\">\n                <NavbarBrand href=\"/\">EXHORBI CONSULT & NOLI PUBLISHERS</NavbarBrand>\n            </Navbar>\n\n        </div>\n    )\n\n}\n\nexport default withRouter(Navigation);","import React, { Component } from 'react';\nimport Footer from './components/footer/footer';\nimport Slider from './components/slider/slider.component';\nimport './App.css';\nimport Navigation from \"./components/Navigation\"\nimport { Jumbotron, Button } from 'reactstrap';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Jumbotron className=\"jumbotron\">\n          <Slider />\n          <hr className=\"my-2\" />\n          <p className=\"lead\">\n            <Button color=\"primary\" href=\"https://exhorbi.herokuapp.com/\" target=\"_blank\" >Exhorbi Consult</Button>\n          </p>\n          <p className=\"lead\">\n            <Button color=\"primary\">Noli Publishers</Button>\n          </p>\n        </Jumbotron>\n        <br />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}